[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;

void vertex()
{
	VERTEX = mat3(MODELVIEW_MATRIX) * VERTEX + MODELVIEW_MATRIX[3].xyz;
}

void fragment()
{
	/*
	vec3 dark_orange = vec3(1.0, 0.3, 0.1);
	vec3 light_orange = vec3(1.0, 0.8, 0.4);
	
	float mask = sin(TIME);
	
	if (mask <= 0.0) mask = 0.0;
	else mask = 1.0;
	ALBEDO = light_orange * mask + dark_orange * (1.0 - mask);
	*/
	
	//vec3 world_pos = mat3(CAMERA_MATRIX) * VERTEX + CAMERA_MATRIX[3].xyz;
	//ALBEDO = vec3(world_pos.x * 0.1, 0.0, 0.0);
	
	float angle = atan(VERTEX.z / VERTEX.x);
	ALBEDO = vec3(0.5 + 0.5 * sin(angle * 5.0));
}"

[resource]
shader = SubResource( 1 )
